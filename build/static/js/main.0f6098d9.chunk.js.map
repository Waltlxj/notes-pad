{"version":3,"sources":["services/notes.js","components/Note.js","components/Footer.js","App.js","index.js"],"names":["url","exportedObject","getAll","axios","get","then","response","data","create","newO","post","update","id","put","remove","delete","Note","note","changeImportance","deleteNote","label","important","content","onClick","Footer","style","color","fontStyle","fontSize","App","React","useState","notes","setNotes","newNote","setNewNote","useEffect","noteService","initialNotes","map","find","n","changeNote","returnedNote","changeImportanceOf","filter","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LACMA,EAAM,kCAsBGC,EADQ,CAACC,OAnBT,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiBbC,OAdjB,SAACC,GAEZ,OADgBN,IAAMO,KAAKV,EAAKS,GACjBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAYLI,OATzB,SAACC,EAAIH,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAoBY,GAAMH,GAC3BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAOGO,OAJjC,SAACF,GACZ,OAAOT,IAAMY,OAAN,UAAgBf,EAAhB,YAAuBY,M,OCFnBI,EAfF,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,iBAAkBC,EAAgB,EAAhBA,WAC7BC,EAAQH,EAAKI,UAAY,wBAA0B,sBACzD,OACI,+BACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SACKE,IAEL,wBAAQG,QAASJ,EAAjB,wBCOGK,EAfA,WAOX,OACE,sBAAKC,MAPa,CAClBC,MAAO,YACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,kFCsEOC,MA7Ef,WACE,MAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BH,IAAMC,SAAS,uBAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KAmDA,OA1CAL,IAAMM,WAPO,WACXC,EACGnC,SACAG,MAAK,SAAAiC,GACJL,EAASK,QAGO,IA2CpB,qCACE,uCAEA,6BACGN,EAAMO,KAAI,SAAAtB,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAhB/B,SAACN,GAC1B,IAAMK,EAAOe,EAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAE7B,KAAOA,KAChC8B,EAAU,2BAAOzB,GAAP,IAAaI,WAAYJ,EAAKI,YAC9CgB,EACG1B,OAAOC,EAAI8B,GACXrC,MAAK,SAAAsC,GACJV,EAASD,EAAMO,KAAI,SAAAE,GAAC,OAAIA,EAAE7B,KAAOA,EAAK+B,EAAeF,SAUKG,CAAmB3B,EAAKL,KAAKO,WAAY,kBAxBrFP,EAwBsGK,EAAKL,QAvB7HyB,EACGvB,OAAOF,GACPP,MAAK,SAAAC,GACJ2B,EAASD,EAAMa,QAAO,SAAA5B,GAAI,OAAIA,EAAKL,KAAOA,SAJ7B,IAACA,IAwBDK,EAAKL,SAIpB,sBAAMkC,SAhDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB3B,QAASY,EACTgB,MAAM,IAAIC,MAAOC,cACjB/B,UAAWgC,KAAKC,SAAW,IAE7BjB,EACG7B,OAAOyC,GACP5C,MAAK,SAAAsC,GACJV,EAASD,EAAMuB,OAAOZ,IACtBR,EAAW,QAqCb,SACE,sCACE,uBAAOqB,MAAOtB,EAASuB,SAnCN,SAACV,GACxBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzBrB,EAAWY,EAAMa,OAAOJ,UAkClB,wBAAQK,KAAK,SAAb,uBAMJ,cAAC,EAAD,Q,MCxENC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0f6098d9.chunk.js","sourcesContent":["import axios from 'axios'\nconst url = \"http://localhost:3001/api/notes\"\n\nconst getAll = () => {\n    const request = axios.get(url)\n    return request.then(response => response.data)\n}\n\nconst create = (newO) => {\n    const request = axios.post(url, newO)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newO) => {\n    const request = axios.put(`${url}/${id}`, newO)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${url}/${id}`)\n}\n\nconst exportedObject = {getAll, create, update, remove}\nexport default exportedObject","import React from 'react'\n\nconst Note = ({note, changeImportance, deleteNote}) => {\n    const label = note.important ? 'Change to unimportant' : 'Change to important'\n    return (\n        <li>\n            {note.content}\n            <button onClick={changeImportance}>\n                {label}\n            </button>\n            <button onClick={deleteNote}>\n                Delete\n            </button>\n        </li>\n    )\n}\n\nexport default Note","import React from \"react\"\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'gainsboro',\n      fontStyle: 'italic',\n      fontSize: 12\n    }\n  \n    return(\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, web development pratice by Walt Li</em>\n      </div>\n    )\n  }\n\nexport default Footer","import React from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Note'\nimport Footer from './components/Footer'\n\nfunction App() {\n  const [notes, setNotes] = React.useState([])\n  const [newNote, setNewNote] = React.useState(\"Enter a new note...\")\n\n  const hook = () => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }\n  React.useEffect(hook, [])\n  //By default, effects run after every completed render\n  //So [] here used to run it only with the first render\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const deleteNote = (id) => {\n    noteService\n      .remove(id)\n      .then(response => {\n        setNotes(notes.filter(note => note.id !== id))\n      })\n  }\n\n  const changeImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changeNote = {...note, important: !note.important}\n    noteService\n      .update(id, changeNote)\n      .then(returnedNote => {\n        setNotes(notes.map(n => n.id === id ? returnedNote : n))\n      })\n  }\n\n  return (\n    <>\n      <h1>Notes</h1>\n\n      <ul>\n        {notes.map(note =>\n          <Note key={note.id} note={note} changeImportance={() => changeImportanceOf(note.id)} deleteNote={() => deleteNote(note.id)}/>\n        )}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <p> Add: \n          <input value={newNote} onChange={handleNoteChange} />\n          <button type=\"submit\">\n            Save\n          </button>\n        </p>\n      </form>\n      \n      <Footer />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n  \n\n\n"],"sourceRoot":""}